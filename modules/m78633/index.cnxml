<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Simplification of Boolean Expressions</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m78633</md:content-id>
  <md:title>Simplification of Boolean Expressions</md:title>
  <md:abstract/>
  <md:uuid>107f1445-9585-4939-9ae5-d9df4e9fbb0c</md:uuid>
</metadata>

<content>
    <section id="import-auto-idm1372090688">
      <title>2.1 Boolean Algebra Simplification</title>
      <para id="import-auto-idm1149370800">The most practical use of Boolean algebra is to simplify logic circuits. A Boolean expression can be implemented directly in a logic circuit. The number of terms and operations in a Boolean expression is directly related to the number of logic components. Through Boolean algebra simplification, a Boolean expression is translated to another form with less number of terms and operations. A logic circuit for the simplified Boolean expression performs the identical function with fewer logic components as compared to its original form. Additionally, the simplified Boolean expression when implemented to a logic circuit is reliable with a reduced cost.</para>
      <para id="import-auto-idm1163374496">Boolean expressions may be simplified by applying a series of Boolean algebra laws, described in the previous chapter. The simplification process is similar to that of regular algebra. For example, the algebra expression <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mrow><m:mn>12345</m:mn><m:mo stretchy="false">/</m:mo><m:mn>98765</m:mn></m:mrow><m:mo stretchy="false">+</m:mo><m:mrow><m:mn>67890</m:mn><m:mo stretchy="false">∗</m:mo><m:mn>23456</m:mn></m:mrow></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">∗</m:mo><m:mn>0</m:mn></m:mrow><m:annotation encoding="StarMath 5.0">left (12345/98765+67890*23456 right ) *0</m:annotation></m:semantics></m:math> is simplified to 0 based on the algebra rule that 0 times anything number is 0 <footnote id="import-auto-footnote-1"> Note that infinity is not a number and 0 times infinity is undefined.</footnote>. In Boolean algebra, there is a corresponding rule called false law, which states that false AND anything is false such as <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mn>0</m:mn><m:mrow><m:mi>x</m:mi><m:mo stretchy="false">=</m:mo><m:mn>0</m:mn></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">0x=0</m:annotation></m:semantics></m:math>, where x is any Boolean expression. For example, the Boolean expression <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mn>0</m:mn><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi mathvariant="italic">BC</m:mi><m:mo stretchy="false">+</m:mo><m:mrow/></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">0 left (A+BC+DEF right )</m:annotation></m:semantics></m:math>=0, where A, B, C, D, E, and F are Boolean variable and 0 indicates Boolean false. There are 4 terms in the previous Boolean expression. After the false rule is applied, the expression becomes one term, i.e., false. On the other hand, the true law states that true OR anything is true, i.e., <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mn>1</m:mn><m:mo stretchy="false">+</m:mo><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi>C</m:mi></m:mrow><m:mo stretchy="false">=</m:mo><m:mn>1</m:mn></m:mrow><m:annotation encoding="StarMath 5.0">1+A+B+C=1</m:annotation></m:semantics></m:math>, where A, B, and C are any Boolean expression. </para>
      <para id="import-auto-idm334816672">There may have different ways to simplification Boolean expressions by applying Boolean algebra law. The following example shows a simplification process for a Boolean expression to be evaluated to true.</para>
      <para id="import-auto-idm1338300080"><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi mathvariant="italic">ABC</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">     B+ acute {ABC} </m:annotation></m:semantics></m:math><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi mathvariant="italic">BC</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">=B+ acute {A} + acute {BC}</m:annotation></m:semantics></m:math>DeMorgan’s law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">acute {A} + acute {B} + acute {C}</m:annotation></m:semantics></m:math>DeMorgan’s law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">=B+ acute {B} + acute {A} + acute {C}</m:annotation></m:semantics></m:math>Commutative law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">= left (B+ acute {B} right ) + acute {A} + acute {C}</m:annotation></m:semantics></m:math>Associative law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mn>1</m:mn><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">=1 + acute {A} + acute {C}</m:annotation></m:semantics></m:math> Inverse law</para>
      <para id="import-auto-idm355037536"><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mn>1</m:mn></m:mrow><m:annotation encoding="StarMath 5.0">=1</m:annotation></m:semantics></m:math>  True law</para>
      <para id="import-auto-idm382178896">The above simplification process may not be unique. The decomposition of <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mover accent="true"><m:mi mathvariant="italic">ABC</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:annotation encoding="StarMath 5.0">acute {ABC}</m:annotation></m:semantics></m:math> maybe considered as either <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mover accent="true"><m:mrow><m:mi>A</m:mi><m:mi>∙</m:mi><m:mi mathvariant="italic">BC</m:mi></m:mrow><m:mo stretchy="false">´</m:mo></m:mover><m:annotation encoding="StarMath 5.0">acute {A∙BC}</m:annotation></m:semantics></m:math> or <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mover accent="true"><m:mrow><m:mi mathvariant="italic">AB</m:mi><m:mi>∙</m:mi><m:mi>C</m:mi></m:mrow><m:mo stretchy="false">´</m:mo></m:mover><m:annotation encoding="StarMath 5.0">acute {AB∙C}</m:annotation></m:semantics></m:math> where <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mi>∙</m:mi><m:annotation encoding="StarMath 5.0">∙</m:annotation></m:semantics></m:math> indicate an AND operation. Obviously, either case will lead to <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">acute {A} + acute {B} + acute {C}</m:annotation></m:semantics></m:math> but the process is different.</para>
      <para id="import-auto-idm382178640"><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mi mathvariant="italic">AB</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi>A</m:mi></m:mrow><m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">   AB+ acute {A} B+A acute {B} + acute {A} acute {B} </m:annotation></m:semantics></m:math><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi>A</m:mi></m:mrow><m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">left (A+ acute {A} right ) B+A acute {B} + acute {A} acute {B}</m:annotation></m:semantics></m:math>Distribution law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mn>1</m:mn><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi>A</m:mi></m:mrow><m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">= 1 B+A acute {B} + acute {A} acute {B}</m:annotation></m:semantics></m:math> Inverse law</para>
      <para id="import-auto-idm330863904"><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi>A</m:mi></m:mrow><m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">=B+A acute {B} + acute {A} acute {B}</m:annotation></m:semantics></m:math>True law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">=B+ left (A+ acute {A} right ) acute {B}</m:annotation></m:semantics></m:math> Distribution law</para>
      <para id="import-auto-idm1250266864"><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mn>1</m:mn></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:annotation encoding="StarMath 5.0">=B+1 acute {B}</m:annotation></m:semantics></m:math>  Inverse law</para>
      <para id="import-auto-idm1217018336"><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">=B+ acute {B}</m:annotation></m:semantics></m:math>True law <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow/><m:mn>1</m:mn></m:mrow><m:annotation encoding="StarMath 5.0">   =1</m:annotation></m:semantics></m:math> Inverse law</para>
      <section id="import-auto-idm1159682512">
        <title>2.1.1 Exercise</title>
        <para id="import-auto-idm382140944">Simplify the following Boolean expression using Boolean algebra laws.</para>
        <para id="import-auto-idm382140688">1. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi mathvariant="italic">AB</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mo stretchy="false">=</m:mo><m:mn>1</m:mn></m:mrow><m:annotation encoding="StarMath 5.0">A+ acute {AB} =1</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm1224004448">2. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mover accent="true"><m:mi mathvariant="italic">AB</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">=</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">acute {AB} left (A+ acute {B} right ) left (acute {B} +B right ) = acute {A}</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm326605024">3. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>C</m:mi></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mrow><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mrow><m:mi mathvariant="italic">AD</m:mi><m:mo stretchy="false">+</m:mo><m:mi>A</m:mi></m:mrow><m:mover accent="true"><m:mi>D</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">+</m:mo><m:mi mathvariant="italic">AC</m:mi><m:mo stretchy="false">+</m:mo><m:mi>C</m:mi></m:mrow><m:mo stretchy="false">=</m:mo><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>C</m:mi></m:mrow></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">left (A+C right ) left (AD+A acute {D} right ) +AC+C=A+C</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm376685808">4. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi mathvariant="italic">AB</m:mi></m:mrow><m:mo stretchy="false">=</m:mo><m:mi>A</m:mi></m:mrow><m:annotation encoding="StarMath 5.0">A+AB=A</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm1187259616">5. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">+</m:mo><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi mathvariant="italic">AA</m:mi></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow></m:mrow><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">=</m:mo><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi></m:mrow></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">acute {A} left (A+B right ) + left (B+AA right ) left (A+ acute {B} right ) =A+B</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm1213249600">6. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mi mathvariant="italic">BC</m:mi><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi></m:mrow><m:mrow><m:mrow><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mo stretchy="false">+</m:mo><m:mi mathvariant="italic">BA</m:mi></m:mrow><m:mo stretchy="false">=</m:mo><m:mi>B</m:mi></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">BC+B acute {C} +BA=B</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm1233303504">7. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mrow><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mrow><m:mi>C</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mrow><m:mi>D</m:mi><m:mo stretchy="false">+</m:mo><m:mover accent="true"><m:mi>A</m:mi><m:mo stretchy="false">´</m:mo></m:mover></m:mrow><m:mover accent="true"><m:mi>B</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mover accent="true"><m:mi>C</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mover accent="true"><m:mi>D</m:mi><m:mo stretchy="false">´</m:mo></m:mover><m:mrow><m:mi>E</m:mi><m:mo stretchy="false">=</m:mo><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi><m:mo stretchy="false">+</m:mo><m:mi>C</m:mi><m:mo stretchy="false">+</m:mo><m:mi>D</m:mi><m:mo stretchy="false">+</m:mo><m:mi>E</m:mi></m:mrow></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">A+ acute {A} B+ acute {A} acute {B} C+ acute {A} acute {B} acute {C} D+ acute {A} acute {B} acute {C} acute {D} E=A+B+C+D+E</m:annotation></m:semantics></m:math></para>
        <para id="import-auto-idm328583808">8. <m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block"><m:semantics><m:mrow><m:mi>A</m:mi><m:mrow><m:mrow><m:mo fence="true" stretchy="true">(</m:mo><m:mrow><m:mrow><m:mi>A</m:mi><m:mo stretchy="false">+</m:mo><m:mi>B</m:mi></m:mrow></m:mrow><m:mo fence="true" stretchy="true">)</m:mo></m:mrow><m:mo stretchy="false">=</m:mo><m:mi>A</m:mi></m:mrow></m:mrow><m:annotation encoding="StarMath 5.0">A left (A+B right ) =A</m:annotation></m:semantics></m:math></para>
      </section>
    </section>
  </content>
</document>